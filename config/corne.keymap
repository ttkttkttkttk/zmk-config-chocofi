/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    combos {
        compatible = "zmk,combos";

        Capslock {
            bindings = <&kp CAPS>;
            key-positions = <25 34>;
        };

        minecraft {
            bindings = <&tog 4>;
            key-positions = <36 41>;
        };
    };

    behaviors {
        ht_bl: balanced_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;    // <---[[moderate duration]]
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Letters {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&trans  &kp Q              &kp W              &kp F                &kp P           &kp B        &kp J            &kp L           &kp U                &kp Y              &kp SQT            &trans
&trans  &ht_bl LEFT_WIN A  &ht_bl LEFT_ALT R  &ht_bl LEFT_SHIFT S  &ht_bl LCTRL T  &kp G        &kp M            &ht_bl LCTRL N  &ht_bl LEFT_SHIFT E  &ht_bl LEFT_ALT I  &ht_bl LEFT_WIN O  &trans
&trans  &kp Z              &kp X              &kp C                &kp D           &kp V        &kp K            &kp H           &kp COMMA            &kp DOT            &kp FSLH           &trans
                                              &mo 3                &lt 1 SPACE     &lt 2 TAB    &lt 2 BACKSPACE  &lt 1 ENTER     &lt 3 DELETE
            >;
        };

        CommonFunctions {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &trans    &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp HOME   &trans        &trans  &trans     &kp C_VOLUME_UP  &kp C_VOLUME_DOWN  &trans        &trans
&trans  &kp LEFT  &kp DOWN           &kp UP           &kp RIGHT  &kp ESCAPE    &trans  &kp LCTRL  &kp LEFT_SHIFT   &kp LEFT_ALT       &kp LEFT_WIN  &trans
&trans  &trans    &kp F4             &kp PRINTSCREEN  &kp END    &trans        &trans  &kp F2     &kp F5           &kp F11            &trans        &trans
                                     &trans           &trans     &trans        &trans  &trans     &trans
            >;
        };

        NumSym {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp RIGHT_PARENTHESIS  &kp AMPERSAND           &kp ASTERISK               &kp LEFT_PARENTHESIS  &trans        &kp PLUS   &kp N7        &kp N8        &kp N9        &kp ASTERISK  &trans
&trans  &ht_bl LEFT_WIN COLON  &ht_bl LEFT_ALT DOLLAR  &ht_bl LEFT_SHIFT PERCENT  &ht_bl LCTRL CARET    &kp PERIOD    &kp MINUS  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp SLASH     &trans
&trans  &kp SEMICOLON          &kp EXCLAMATION         &kp AT_SIGN                &kp HASH              &kp COMMA     &kp N0     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp EQUAL     &trans
                                                       &trans                     &trans                &trans        &trans     &trans        &trans
            >;
        };

        Misc {
            bindings = <
&trans  &kp LEFT_BRACKET      &kp RIGHT_BRACKET  &kp LEFT_BRACE  &kp RIGHT_BRACE  &trans    &bt BT_CLR_ALL  &out OUT_BLE  &out OUT_USB  &trans        &trans  &trans
&trans  &trans                &trans             &trans          &trans           &trans    &bt BT_CLR      &bt BT_SEL 3  &bt BT_SEL 4  &trans        &trans  &trans
&trans  &kp NON_US_BACKSLASH  &kp PIPE           &kp GRAVE       &kp TILDE        &trans    &trans          &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &trans  &trans
                                                 &trans          &trans           &trans    &trans          &trans        &trans
            >;
        };

        minecraft {
            bindings = <
&trans  &kp N1     &kp N2  &kp N3  &kp N4     &kp J         &trans  &kp L   &kp U   &trans  &trans  &trans
&trans  &kp TAB    &kp Q   &kp W   &kp E      &kp ESCAPE    &trans  &trans  &trans  &trans  &kp O   &trans
&trans  &kp LSHFT  &kp A   &kp S   &kp D      &kp F         &kp F4  &kp F2  &kp F3  &kp F5  &trans  &trans
                           &trans  &kp SPACE  &kp I         &trans  &trans  &trans
            >;
        };
    };
};
